~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~ <타입>: <제목> 의 형식으로 제목을 아래 공백줄에 작성
~ 변경사항이 "무엇"인지 명확히 작성
~ 끝에 마침표 금지
~ (예시) feat: 로그인 기능 추가
~ 제목 - 50자 요약

~ 바로 아래 공백은 지우지 마세요 (제목과 본문의 분리를 위함)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~ 본문(구체적인 내용)을 아랫줄에 작성
~ 여러 줄의 메시지를 작성할 땐 "-"로 구분 (한 줄은 50자 이내, 초과시 아래 줄에 줄 맞춰 작성)
~ - Why(생략 가능):
~ - What & How: 
~ 
~ 본문

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

~ issue key 는 아래 공백에 입력
~ (예시) #123

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~ <타입>
~ feat : 새로운 기능 추가
~ fix : 버그 수정
~ docs : 문서 수정
~ test : 테스트 코드 추가
~ refact : 코드 리팩토링
~ style : 코드 의미에 영향을 주지 않는 변경사항
~ build : 빌드 부분 혹은 패키지 매니저 수정사항
~ chore : 단순 오탈자 수정
~ rename : 전체적인 파일 구조 변경
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
~
~ 템플릿 적용하는 방법
~ 프로젝트 경로에 .gitmessage.txt 이동
~ 명령어 > git config commit.template .gitmessage.txt
~ 주석기호 변경 > git config --global core.commentChar '~'
~ .gitignore에 등록
~
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~